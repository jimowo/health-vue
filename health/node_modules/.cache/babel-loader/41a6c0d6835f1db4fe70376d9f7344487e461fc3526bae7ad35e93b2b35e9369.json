{"ast":null,"code":"import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport Login from \"@/views/login\";\nimport Home from \"@/views/home\";\nimport store from \"@/store\";\nimport ajax from \"@/utils/ajax\";\nimport { formatMenu } from \"@/utils/initMenus\";\nVue.use(VueRouter);\nconst routes = [{\n  path: \"/login\",\n  component: Login\n}, {\n  path: \"/\",\n  component: Home\n}];\nconst router = new VueRouter({\n  routes\n});\n\n/**\n * 路由导航\n * to； 将要去哪个页面\n * from：从哪个页面过来\n * next: 放行到哪个页面\n */\nrouter.beforeEach((to, from, next) => {\n  console.log(router);\n  // 用户是否登录\n  const token = sessionStorage.getItem(\"token\");\n  if (!token) {\n    if (to.path === \"/login\") {\n      next();\n    } else {\n      next(`/login?redirect=${to.fullPath}`);\n    }\n  } else {\n    // 判断vuex 中是否存在用户基本信息\n    // 向后端发送请求 获取用户的基本信息\n    ajax.get(\"/user/getInfo\").then(res => {\n      // 把用户信息复制到本地缓存\n      const user = res.data;\n      store.commit(\"setAvatar\", user.avatar);\n      store.commit(\"setUsername\", user.username);\n      if (user.roles.length > 0) {\n        // 添加角色信息\n        store.commit(\"setRoles\", user.roles);\n        // 添加菜单信息\n        const menuList = formatMenu(user.menus);\n        for (let menu of menuList) {\n          router.addRoute(menu);\n        }\n        store.commit(\"setMenus\", menuList);\n        // 添加权限信息\n        store.commit(\"setPermissions\", user.permissions);\n      }\n    });\n    // 已经登录跳转主页\n    if (to.path === \"/login\") {\n      next(\"/\");\n    } else {\n      next();\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Login","Home","store","ajax","formatMenu","use","routes","path","component","router","beforeEach","to","from","next","console","log","token","sessionStorage","getItem","fullPath","get","then","res","user","data","commit","avatar","username","roles","length","menuList","menus","menu","addRoute","permissions"],"sources":["C:/Users/12524/Documents/health-vue/health/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport Login from \"@/views/login\";\nimport Home from \"@/views/home\"\nimport store from \"@/store\";\nimport ajax from \"@/utils/ajax\";\nimport { formatMenu } from \"@/utils/initMenus\";\n\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: \"/login\",\n    component: Login,\n  },\n  {\n    path: \"/\",\n    component: Home,\n  },\n];\n\nconst router = new VueRouter({\n  routes,\n});\n\n/**\n * 路由导航\n * to； 将要去哪个页面\n * from：从哪个页面过来\n * next: 放行到哪个页面\n */\nrouter.beforeEach((to, from, next) => {\n  console.log(router);\n  // 用户是否登录\n  const token = sessionStorage.getItem(\"token\");\n  if (!token) {\n    if (to.path === \"/login\") {\n      next();\n    } else {\n      next(`/login?redirect=${to.fullPath}`);\n    }\n  } else {\n    // 判断vuex 中是否存在用户基本信息\n    // 向后端发送请求 获取用户的基本信息\n    ajax.get(\"/user/getInfo\").then((res) => {\n      // 把用户信息复制到本地缓存\n      const user = res.data;\n      store.commit(\"setAvatar\", user.avatar);\n      store.commit(\"setUsername\", user.username);\n      if (user.roles.length > 0) {\n        // 添加角色信息\n        store.commit(\"setRoles\", user.roles);\n        // 添加菜单信息\n        const menuList = formatMenu(user.menus);\n        for (let menu of menuList) {\n           router.addRoute(menu);\n        }\n        store.commit(\"setMenus\", menuList);\n        // 添加权限信息\n        store.commit(\"setPermissions\", user.permissions);\n      }\n    });\n    // 已经登录跳转主页\n    if (to.path === \"/login\") {\n      next(\"/\");\n    } else {\n      next();\n    }\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,UAAU,QAAQ,mBAAmB;AAE9CN,GAAG,CAACO,GAAG,CAACN,SAAS,CAAC;AAElB,MAAMO,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAER;AACb,CAAC,EACD;EACEO,IAAI,EAAE,GAAG;EACTC,SAAS,EAAEP;AACb,CAAC,CACF;AAED,MAAMQ,MAAM,GAAG,IAAIV,SAAS,CAAC;EAC3BO;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAG,MAAM,CAACC,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpCC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACnB;EACA,MAAMO,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,IAAI,CAACF,KAAK,EAAE;IACV,IAAIL,EAAE,CAACJ,IAAI,KAAK,QAAQ,EAAE;MACxBM,IAAI,EAAE;IACR,CAAC,MAAM;MACLA,IAAI,CAAE,mBAAkBF,EAAE,CAACQ,QAAS,EAAC,CAAC;IACxC;EACF,CAAC,MAAM;IACL;IACA;IACAhB,IAAI,CAACiB,GAAG,CAAC,eAAe,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACtC;MACA,MAAMC,IAAI,GAAGD,GAAG,CAACE,IAAI;MACrBtB,KAAK,CAACuB,MAAM,CAAC,WAAW,EAAEF,IAAI,CAACG,MAAM,CAAC;MACtCxB,KAAK,CAACuB,MAAM,CAAC,aAAa,EAAEF,IAAI,CAACI,QAAQ,CAAC;MAC1C,IAAIJ,IAAI,CAACK,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;QACzB;QACA3B,KAAK,CAACuB,MAAM,CAAC,UAAU,EAAEF,IAAI,CAACK,KAAK,CAAC;QACpC;QACA,MAAME,QAAQ,GAAG1B,UAAU,CAACmB,IAAI,CAACQ,KAAK,CAAC;QACvC,KAAK,IAAIC,IAAI,IAAIF,QAAQ,EAAE;UACxBrB,MAAM,CAACwB,QAAQ,CAACD,IAAI,CAAC;QACxB;QACA9B,KAAK,CAACuB,MAAM,CAAC,UAAU,EAAEK,QAAQ,CAAC;QAClC;QACA5B,KAAK,CAACuB,MAAM,CAAC,gBAAgB,EAAEF,IAAI,CAACW,WAAW,CAAC;MAClD;IACF,CAAC,CAAC;IACF;IACA,IAAIvB,EAAE,CAACJ,IAAI,KAAK,QAAQ,EAAE;MACxBM,IAAI,CAAC,GAAG,CAAC;IACX,CAAC,MAAM;MACLA,IAAI,EAAE;IACR;EACF;AACF,CAAC,CAAC;AAEF,eAAeJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}