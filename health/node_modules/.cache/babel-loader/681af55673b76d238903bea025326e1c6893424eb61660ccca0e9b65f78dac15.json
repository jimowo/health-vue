{"ast":null,"code":"export default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"login\",\n  data() {\n    const checkUsername = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"用户名不能为空\"));\n      }\n    };\n    const validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        return callback(new Error(\"请输入密码\"));\n      }\n    };\n    return {\n      ruleForm: {\n        username: \"\",\n        pass: \"\"\n      },\n      rules: {\n        username: [{\n          validator: checkUsername,\n          trigger: \"blur\"\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert(\"submit!\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":"AAgCA;EACA;EACAA;EACAC;IACA;MACA;QACA;MACA;IACA;IACA;MACA;QACA;MACA;IACA;IACA;MACAC;QACAC;QACAC;MACA;MACAC;QACAF;UAAAG;UAAAC;QAAA;QACAH;UAAAE;UAAAC;QAAA;MACA;IACA;EACA;EACAC;IACAC;MACA;QACA;UACAC;QACA;UACAC;UACA;QACA;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","data","ruleForm","username","pass","rules","validator","trigger","methods","submitForm","alert","console","resetForm"],"sourceRoot":"src/views","sources":["login.vue"],"sourcesContent":["<template>\n  <div>\n    <span>登录页面</span>\n    <el-form\n      :model=\"ruleForm\"\n      status-icon\n      :rules=\"rules\"\n      ref=\"ruleForm\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input v-model=\"ruleForm.username\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"pass\">\n        <el-input\n          type=\"password\"\n          v-model=\"ruleForm.pass\"\n          autocomplete=\"off\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\n          >提交</el-button\n        >\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"login\",\n  data() {\n    const checkUsername = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"用户名不能为空\"));\n      }\n    };\n    const validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        return callback(new Error(\"请输入密码\"));\n      }\n    };\n    return {\n      ruleForm: {\n        username: \"\",\n        pass: \"\",\n      },\n      rules: {\n        username: [{ validator: checkUsername, trigger: \"blur\" }],\n        pass: [{ validator: validatePass, trigger: \"blur\" }],\n      },\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert(\"submit!\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}